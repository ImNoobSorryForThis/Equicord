name: Release
on:
    push:
        branches:
            - main
            - dev
env:
    FORCE_COLOR: true

permissions: write-all

jobs:
    Build:
        name: Build Equicord
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - uses: pnpm/action-setup@v3 # Install pnpm using packageManager key in package.json

            - name: Use Node.js 20
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "pnpm"

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build web
              run: pnpm buildWebStandalone

            - name: Build
              run: pnpm buildStandalone

            - name: Generate plugin list
              run: pnpm generatePluginJson dist/vencordplugins.json

            - name: Generate Equicord plugin list
              run: pnpm generateEquicordPluginJson dist/equicordplugins.json

            - name: Collect files to be released
              run: |
                  cd dist
                  mkdir release

                  cp browser/browser.* release
                  cp Vencord.user.{js,js.LEGAL.txt} release

                  # copy the plugin data jsons, the extension zips and the desktop/vesktop asars
                  cp *.{json,zip,asar} release

                  # legacy un-asared files
                  # FIXME: remove at some point
                  cp desktop/* release
                  for file in vesktop/*; do
                    filename=$(basename "$file")
                    cp "$file" "release/vencordDesktop${filename^}"
                  done
                  for file in equibop/*; do
                    filename=$(basename "$file")
                    cp "$file" "release/equicordDesktop${filename^}"
                  done

                  find release -size 0 -delete
                  rm release/package.json
                  rm release/*.map

            - name: Setup Actions User
              run: |
                git config --global user.name "github-actions[bot]"
                git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

            - name: Upload Equicord Stable
              if: ${{ github.ref_name == 'main' }}
              run: |
                gh release upload latest --clobber dist/release/*
              env:
                GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload Equicord Dev
              if: ${{ github.ref_name == 'dev' }}
              run: |
                gh release upload devbuild --clobber dist/release/*
              env:
                GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Setup Actions User
              run: |
                git config --global user.name "GitHub-Actions"
                git config --global user.email actions@github.com

            - name: Get Month Day Year
              id: date
              uses: Kaven-Universe/github-action-current-date-time@v1
              with:
                timezone-offset: 240

            - name: Combine Time
              id: combined
              run: |
                echo "TIME=$HOURS-$MINUTES-$SECONDS" >> $GITHUB_ENV
                echo "DATE=$YEAR/$MONTH/$DAY" >> $GITHUB_ENV
              env:
                YEAR: ${{ steps.date.outputs.year }}
                MONTH: ${{ steps.date.outputs.month }}
                DAY: ${{ steps.date.outputs.day }}
                HOURS: ${{ steps.date.outputs.hours }}
                MINUTES: ${{ steps.date.outputs.minutes }}
                SECONDS: ${{ steps.date.outputs.seconds }}

            - name: Upload Plugins JSON to Equibored repo
              if: ${{ github.ref_name == 'main' }}
              run: |
                git clone https://$USERNAME:$API_TOKEN@github.com/$GH_REPO.git plugins
                cd plugins

                cp ../dist/*.json .
                git add -A

                git commit -m "Plugins for https://github.com/$GITHUB_REPOSITORY/commit/$GITHUB_SHA"
                git push --force https://$USERNAME:$API_TOKEN@github.com/$GH_REPO.git
              env:
                API_TOKEN: ${{ secrets.ETOKEN }}
                GH_REPO: Equicord/Equibored
                USERNAME: GitHub-Actions

            - name: Upload Stable Build to Builds repo
              if: ${{ github.ref_name == 'main' }}
              run: |
                git clone https://$USERNAME:$API_TOKEN@github.com/$GH_REPO.git builds
                cd builds

                cd stable
                mkdir -p $DATE/$TIME
                cp -r ../../dist/* ./$DATE/$TIME

                git add -A
                git commit -m "Stable Build for https://github.com/$GITHUB_REPOSITORY/commit/$GITHUB_SHA"
                git push --force https://$USERNAME:$API_TOKEN@github.com/$GH_REPO.git
              env:
                API_TOKEN: ${{ secrets.ETOKEN }}
                DATE: ${{ env.DATE }}
                GH_REPO: Equicord/Builds
                TIME: ${{ env.TIME }}
                USERNAME: GitHub-Actions

            - name: Upload Dev Build To Builds Repo
              if: ${{ github.ref_name == 'dev' }}
              run: |
                git clone https://$USERNAME:$API_TOKEN@github.com/$GH_REPO.git builds
                cd builds

                cd devbuilds
                mkdir -p $DATE/$TIME
                cp -r ../../dist/* ./$DATE/$TIME

                git add -A
                git commit -m "Dev Build for https://github.com/$GITHUB_REPOSITORY/commit/$GITHUB_SHA"
                git push --force https://$USERNAME:$API_TOKEN@github.com/$GH_REPO.git
              env:
                API_TOKEN: ${{ secrets.ETOKEN }}
                DATE: ${{ env.DATE }}
                GH_REPO: Equicord/Builds
                TIME: ${{ env.TIME }}
                USERNAME: GitHub-Actions
